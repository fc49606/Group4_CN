openapi: "3.0.2"
info:
  title: "Movie info API"
  description: "This is a sample server that you can obtain information's about movies such as the title, the year of realese, the budget, the revenue, the directors, the genres, the country, the language, runtime, rating, vote_average, vote_count and the streaming platform that contain the selected movie."
  version: "2.5"

tags:
- name: "Current Movie Data"
  description: "Current information about the movies"

paths:
  /movie:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current list of movies on the streaming platform"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData
      parameters:
        - $ref: '#/components/parameters/year'
        - $ref: '#/components/parameters/streamPlat'
        - $ref: '#/components/parameters/genres'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Movies not found
                type: string
                example: Not found
                
  /rating:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current rating for one movie"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData2
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/year'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Rating not found
                type: string
                example: Not found
                
  /budget:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current budget for one movie"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData3
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/year'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Budget not found
                type: string
                example: Not found
                
  /revenue:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current revenue for one movie"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData4
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/year'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Revenue not found
                type: string
                example: Not found

components:

  parameters:
    title:
      name: title
      in: query
      description: "**Movie title**. *Example: Toy Storie*. You can call by the movie titleans the API responds with a list of results that match a searching word."
      schema:
        type: string

    year:
      name: year
      in: query
      description: "**Realese date**. *Example: 2001*. You can call by movie year. The API responds with the list of movies realesed in that year."
      schema:
        type: string

    streamPlat:
      name: streamPlat
      in: query
      description: "**Streaming Platform**. *Example: Netflix*. We support the following platforms that you can use with the corresponded streamPlat: Netflix, Prime Video, Disney +, Hulu."
      schema:
        type: string

    genres:
      name: genres
      in: query
      description: "**Movie genre**. Search by movie genre. *Example: terror*. The API responds with the list of movies whit the same genre."
      schema:
        type: string

    budget:
      name: budget
      in: query
      description: '**budget**. *Example: dollar*. Monye spend for making the movie.'
      schema:
        type: string
        enum: [euro, dollar]
        default: "dollar"

    revenue:
      name: revenue
      in: query
      description: '**budget**. *Example: dollar*. Monye gained from making the movie.'
      schema:
        type: string
        enum: [euro, dollar]
        default: "dollar"
        
    rating:
      name: rating
      in: query
      description: "**Movie rating**. The classification of the the selected movie"
      schema:
        type: string
        
  schemas:
  
    Title:
      type: object
      properties:
        movies:
          type: array
          items:
            $ref: '#/components/schemas/GetTitle'
            
    Rating:
      type: object
      properties:
        rating:
          type: integer
          items:
            $ref: '#/components/schemas/GetRating'
            
    Budget:
      type: object
      properties:
        budget:
          type: integer
          items:
            $ref: '#/components/schemas/GetBudget'
            
    Revenue:
      type: object
      properties:
        revenue:
          type: integer
          items:
            $ref: '#/components/schemas/GetRevenue'
            
    GetTitle:
      properties:
        title:
          type: string
          description: Name of the selected Movie
          example: Toy Storie
          
    GetRating:
      properties:
        rating:
          type: number
          description: Rating of the selected Movie
          example: 8.1
          
    GetBudget:
      properties:
        rating:
          type: number
          description: Budget of the selected Movie
          example: 1300000
          
    GetRevenue:
      properties:
        rating:
          type: number
          description: Revenue of the selected Movie
          example: 5400000
          