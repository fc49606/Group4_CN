openapi: "3.0.2"
info:
  title: "Movie info API"
  description: "This is a sample server that you can obtain information's about movies such as the title, the year of realese, the budget, the revenue, the directors, the genres, the country, the language, runtime, rating, vote_average, vote_count and the streaming platform that contain the selected movie."
  version: "2.5"

tags:
- name: "Current Movie Data"
  description: "Current information about the movies"
- name: "Update Movie Data"
  description: "The administrator can update de Movie Data"
- name: "Insert/Update Movie Poster"
  description: "The administrator can insert/update the movie posters"
- name: "Delete Movie Data"
  description: "The administrator can delete de Movie Data"

paths:
  /movie:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current list of movies on the streaming platform"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData
      parameters:
        - $ref: '#/components/parameters/year'
        - $ref: '#/components/parameters/streamPlat'
        - $ref: '#/components/parameters/genres'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Movies not found
                type: string
                example: Not found
                
  /rating:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current rating for one movie"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData2
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/year'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Rating not found
                type: string
                example: Not found
                
  /budget:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current budget for one movie"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData3
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/year'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Budget not found
                type: string
                example: Not found
                
  /revenue:
    get:
      tags:
      - "Current Movie Data"
      summary: "Call current revenue for one movie"
      description: "Access current movie data including over 450,000 movies! Current movie data is frequently updated."
      operationId: CurrentMovieData4
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/year'
        
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revenue'
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Revenue not found
                type: string
                example: Not found
                
  /UpdateMovie:
    put:
      tags:
      - "Update Movie Data"
      summary: "Insert a new movie"
      description: "Info: title, year, budget, revenue, directors, genres, country, language, runtime, rating, vote_average, vote_count and the streaming platform that contain the selected movie."
      operationId: CurrentMovieData5
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/budget'
        - $ref: '#/components/parameters/revenue'
        - $ref: '#/components/parameters/directors'
        - $ref: '#/components/parameters/genres'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/runtime'
        - $ref: '#/components/parameters/rating'
        - $ref: '#/components/parameters/vote_average'
        - $ref: '#/components/parameters/vote_count'
        - $ref: '#/components/parameters/streamPlat'
        - $ref: '#/components/parameters/year'
        - $ref: '#/components/parameters/realese_date'
        
      responses:
        "200":
          description: Successful response
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Revenue not found
                type: string
                example: Not found
                
  /MovieImage:
    post:
      tags:
      - "Insert/Update Movie Poster"
      summary: "Insert/Update the movie poster"
      operationId: CurrentMovieData6
      parameters:
      - $ref: '#/components/parameters/id'
      - $ref: '#/components/parameters/image'

        
      responses:
        "200":
          description: Successful response
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Revenue not found
                type: string
                example: Not found
                
  /DeleteMovie:
    delete:
      tags:
      - "Delete Movie Data"
      summary: "Insert a new movie"
      description: "Deleted info: title, year, budget, revenue, directors, genres, country, language, runtime, rating, vote_average, vote_count and the streaming platform that contain the selected movie."
      operationId: CurrentMovieData7
      parameters:
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/budget'
        - $ref: '#/components/parameters/revenue'
        - $ref: '#/components/parameters/directors'
        - $ref: '#/components/parameters/genres'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/runtime'
        - $ref: '#/components/parameters/rating'
        - $ref: '#/components/parameters/vote_average'
        - $ref: '#/components/parameters/vote_count'
        - $ref: '#/components/parameters/streamPlat'
        - $ref: '#/components/parameters/year'
        - $ref: '#/components/parameters/realese_date'
        
      responses:
        "200":
          description: Successful response
              
        "404":
          description: Not found response
          content:
            text/plain:
              schema:
                title: Revenue not found
                type: string
                example: Not found

components:

  parameters:
    title:
      name: title
      in: query
      description: "**Movie title**. *Example: Toy Storie*. You can call by the movie titleans the API responds with a list of results that match a searching word."
      schema:
        type: string
        
    id:
      name: id
      in: query
      description: "**Movie ID**. *Example: `2172797`*. You can call by movie ID. The API responds with the exact result. You can include multiple movies in this parameter &mdash; just separate them by commas. The limit of locations is 2."
      schema:
        type: string

    year:
      name: year
      in: query
      description: "**Realese date**. *Example: 2001*. You can call by movie year. The API responds with the list of movies realesed in that year."
      schema:
        type: string

    lang:
      name: lang
      in: query
      description: '**Language**. *Example: en*. You can use lang parameter to get the output in your language. We support the following languages that you can use with the corresponded lang values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
      schema:
        type: string
        enum: [ar, bg, ca, cz, de, el, en, fa, fi, fr, gl, hr, hu, it, ja, kr, la, lt, mk, nl, pl, pt, ro, ru, se, sk, sl, es, tr, ua, vi, zh_cn, zh_tw]
        default: "en"

    streamPlat:
      name: streamPlat
      in: query
      description: "**Streaming Platform**. *Example: Netflix*. We support the following platforms that you can use with the corresponded streamPlat: Netflix, Prime Video, Disney +, Hulu."
      schema:
        type: string

    genres:
      name: genres
      in: query
      description: "**Movie genre**. Search by movie genre. *Example: terror*. The API responds with the list of movies whit the same genre."
      schema:
        type: string

    budget:
      name: budget
      in: query
      description: '**budget**. *Example: dollar*. Monye spend for making the movie.'
      schema:
        type: string
        enum: [euro, dollar]
        default: "dollar"

    revenue:
      name: revenue
      in: query
      description: '**budget**. *Example: dollar*. Monye gained from making the movie.'
      schema:
        type: string
        enum: [euro, dollar]
        default: "dollar"
        
    directors:
      name: director
      in: query
      description: "**Director**. *Example: Steven Spielberg *. Directors ho make the selected movie."
      schema:
        type: string
        
    country:
      name: country
      in: query
      description: '**Country**. *Example: Portugal*. You can use country parameter to get the output in your country. We support the following country that you can use with the corresponded country values: Arabic - `ar`, Bulgarian - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`, English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French - `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian - `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian - `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese - `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak - `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian - `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese Traditional - `zh_tw`.'
      schema:
        type: string
        enum: [ar, bg, ca, cz, de, el, en, fa, fi, fr, gl, hr, hu, it, ja, kr, la, lt, mk, nl, pl, pt, ro, ru, se, sk, sl, es, tr, ua, vi, zh_cn, zh_tw]
        default: "en"
        
    runtime:
      name: runtime
      in: query
      description: "**Movie duration**."
      schema:
        type: string
        
    rating:
      name: rating
      in: query
      description: "**Movie rating**. The classification of the the selected movie"
      schema:
        type: string
        
    vote_average:
      name: vote_average
      in: query
      description: "**Average vote**. The average vote of the the selected movie"
      schema:
        type: string
        
    vote_count:
      name: vote_count
      in: query
      description: "**Vote Count**. The vote count of the the selected movie"
      schema:
        type: string
        
    image:
      name: img
      in: query
      description: "**Movie Poster**. Discription of the imagem ex: prety"
      schema:
        type: string

    realese_date:
      name: realese_date
      in: query
      description: "**Movie realesed date**. Date when the was realesed"
      schema:
        type: string
        
  schemas:
  
    Title:
      type: object
      properties:
        movies:
          type: array
          items:
            $ref: '#/components/schemas/GetTitle'
            
    Rating:
      type: object
      properties:
        rating:
          type: integer
          items:
            $ref: '#/components/schemas/GetRating'
            
    Budget:
      type: object
      properties:
        budget:
          type: integer
          items:
            $ref: '#/components/schemas/GetBudget'
            
    Revenue:
      type: object
      properties:
        revenue:
          type: integer
          items:
            $ref: '#/components/schemas/GetRevenue'
            
    GetTitle:
      properties:
        title:
          type: string
          description: Name of the selected Movie
          example: Toy Storie
          
    GetRating:
      properties:
        rating:
          type: number
          description: Rating of the selected Movie
          example: 8.1
          
    GetBudget:
      properties:
        rating:
          type: number
          description: Budget of the selected Movie
          example: 1300000
          
    GetRevenue:
      properties:
        rating:
          type: number
          description: Revenue of the selected Movie
          example: 5400000
          