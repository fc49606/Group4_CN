---microservice_movies---

gcloud builds submit --tag eu.gcr.io/cn2021-kubernetes-colab/microservice-movies
gcloud run deploy microservice-movies --image eu.gcr.io/cn2021-kubernetes-colab/microservice-movies
gcloud run services update microservice-movies --add-cloudsql-instances cn2021-kubernetes-colab:europe-west2:database-g04 --set-env-vars CLOUD_SQL_CONNECTION_NAME=cn2021-kubernetes-colab:europe-west2:database-g04,DB_USER=postgres,DB_PASS=root,DB_NAME=movies_streaming_plataform

---microservice_budget---

gcloud builds submit --tag eu.gcr.io/cn2021-kubernetes-colab/microservice-budget
gcloud run deploy microservice-budget --image eu.gcr.io/cn2021-kubernetes-colab/microservice-budget
gcloud run services update microservice-budget --add-cloudsql-instances cn2021-kubernetes-colab:europe-west2:database-g04 --set-env-vars CLOUD_SQL_CONNECTION_NAME=cn2021-kubernetes-colab:europe-west2:database-g04,DB_USER=postgres,DB_PASS=root,DB_NAME=movies

---microservice_revenue---

gcloud builds submit --tag eu.gcr.io/cn2021-kubernetes-colab/microservice-revenue
gcloud run deploy microservice-revenue --image eu.gcr.io/cn2021-kubernetes-colab/microservice-revenue
gcloud run services update microservice-revenue --add-cloudsql-instances cn2021-kubernetes-colab:europe-west2:database-g04 --set-env-vars CLOUD_SQL_CONNECTION_NAME=cn2021-kubernetes-colab:europe-west2:database-g04,DB_USER=postgres,DB_PASS=root,DB_NAME=movies

---microservice_ratings---

gcloud builds submit --tag eu.gcr.io/cn2021-kubernetes-colab/microservice-ratings
gcloud run deploy microservice-ratings --image eu.gcr.io/cn2021-kubernetes-colab/microservice-ratings
gcloud run services update microservice-ratings --add-cloudsql-instances cn2021-kubernetes-colab:europe-west2:database-g04 --set-env-vars CLOUD_SQL_CONNECTION_NAME=cn2021-kubernetes-colab:europe-west2:database-g04,DB_USER=postgres,DB_PASS=root,DB_NAME=movies


---kubernets---

gcloud auth login
gcloud container clusters create gk-cluster --num-nodes=4
gcloud container clusters get-credentials gk-cluster
kubectl create deployment movie --image=eu.gcr.io/cn2021-kubernetes-colab/microservice-movies
kubectl create deployment budget --image=eu.gcr.io/cn2021-kubernetes-colab/microservice-budget
kubectl create deployment revenue --image=eu.gcr.io/cn2021-kubernetes-colab/microservice-revenue
kubectl create deployment rating --image=eu.gcr.io/cn2021-kubernetes-colab/microservice-ratings
kubectl expose deployment movie --type LoadBalancer --port 80 --target-port 8080
kubectl expose deployment budget --type LoadBalancer --port 80 --target-port 8080
kubectl expose deployment revenue --type LoadBalancer --port 80 --target-port 8080
kubectl expose deployment rating --type LoadBalancer --port 80 --target-port 8080
kubectl get pods
kubectl get service movie
kubectl get service budget
kubectl get service revenue
kubectl get service rating

---kubernets(limpeza)---
kubectl delete service movie
kubectl delete service budget 
kubectl delete service revenue 
kubectl delete service rating 
gcloud container clusters delete gk-cluster
gcloud container images delete eu.gcr.io/cn2021-kubernetes-colab/microservice-movies --force-delete-tags --quiet
gcloud container images delete eu.gcr.io/cn2021-kubernetes-colab/microservice-budget --force-delete-tags --quiet
gcloud container images delete eu.gcr.io/cn2021-kubernetes-colab/microservice-revenue --force-delete-tags --quiet
gcloud container images delete eu.gcr.io/cn2021-kubernetes-colab/microservice-ratings --force-delete-tags --quiet

kubectl create secret generic cloudsql-instance-credentials --from-file=sql_credentials.json=cn2021-kubernetes-colab-b2ce6765fd36.json
kubectl create secret generic cloudsql-db-credentials --from-literal=username=postgres --from-literal=password=root --from-literal=dbname=movies_streaming_plataform


kubectl create -f deployment.yaml